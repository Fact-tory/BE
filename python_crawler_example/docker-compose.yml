version: '3.8'

services:
  # 네이버 뉴스 크롤러 (FastAPI 서버 모드)
  crawler-server:
    build: .
    ports:
      - "8000:8000"
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - DEBUG=false
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - JAVA_BACKEND_URL=http://java-backend:8080
      - LOG_LEVEL=INFO
    volumes:
      - ./output:/app/output
      - ./logs:/app/logs
    depends_on:
      - rabbitmq
    networks:
      - crawler-network
    restart: unless-stopped

  # RabbitMQ 워커 모드 (Java 백엔드와 연동)
  crawler-worker:
    build: .
    command: poetry run python crawler_worker.py
    environment:
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - LOG_LEVEL=INFO
    volumes:
      - ./output:/app/output
      - ./logs:/app/logs
    depends_on:
      - rabbitmq
    networks:
      - crawler-network
    restart: unless-stopped
    deploy:
      replicas: 2  # 워커 복수 실행

  # RabbitMQ 메시지 브로커
  rabbitmq:
    image: rabbitmq:3.12-management
    ports:
      - "5672:5672"    # AMQP 포트
      - "15672:15672"  # 관리 UI 포트
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - crawler-network
    restart: unless-stopped

  # Java 백엔드 (참조용 - 실제로는 별도 실행)
  java-backend:
    image: openjdk:17-jdk-slim
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    networks:
      - crawler-network
    restart: unless-stopped
    profiles:
      - with-java  # 선택적 실행

volumes:
  rabbitmq-data:

networks:
  crawler-network:
    driver: bridge
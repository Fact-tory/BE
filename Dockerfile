# =================================\n# CommonGround BE Docker Image\n# Multi-stage build for optimized production image\n# =================================\n\n# =================================\n# Build Stage\n# =================================\nFROM gradle:8.5-jdk17-alpine AS build\n\n# 작업 디렉토리 설정\nWORKDIR /app\n\n# Gradle wrapper 및 설정 파일 복사\nCOPY gradle/ gradle/\nCOPY gradlew .\nCOPY build.gradle .\nCOPY settings.gradle .\n\n# 의존성 다운로드 (캐시 최적화)\nRUN ./gradlew dependencies --no-daemon\n\n# 소스 코드 복사\nCOPY src/ src/\n\n# 애플리케이션 빌드 (테스트 제외)\nRUN ./gradlew build -x test --no-daemon\n\n# =================================\n# Runtime Stage\n# =================================\nFROM openjdk:17-jre-alpine AS runtime\n\n# 메타데이터 설정\nLABEL maintainer=\"CommonGround Team\"\nLABEL version=\"1.0.0\"\nLABEL description=\"CommonGround Backend API Server\"\n\n# 시스템 패키지 업데이트 및 필수 도구 설치\nRUN apk update && apk add --no-cache \\\n    curl \\\n    tzdata \\\n    dumb-init \\\n    && rm -rf /var/cache/apk/*\n\n# 타임존 설정 (한국 시간)\nENV TZ=Asia/Seoul\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\n# 애플리케이션 사용자 생성 (보안 강화)\nRUN addgroup -g 1001 -S appgroup && \\\n    adduser -u 1001 -S appuser -G appgroup\n\n# 작업 디렉토리 설정\nWORKDIR /app\n\n# 빌드 스테이지에서 JAR 파일 복사\nCOPY --from=build /app/build/libs/*.jar app.jar\n\n# 파일 소유권 변경\nRUN chown -R appuser:appgroup /app\n\n# 애플리케이션 사용자로 전환\nUSER appuser\n\n# JVM 옵션 설정\nENV JAVA_OPTS=\"-Xms512m -Xmx1024m -XX:+UseG1GC -XX:G1HeapRegionSize=16m -XX:+UseStringDeduplication\"\n\n# 헬스체크 설정\nHEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \\\n    CMD curl -f http://localhost:8080/actuator/health || exit 1\n\n# 포트 노출\nEXPOSE 8080\n\n# 애플리케이션 실행\n# dumb-init을 사용하여 PID 1 문제 해결 및 시그널 처리 개선\nENTRYPOINT [\"dumb-init\", \"--\"]\nCMD [\"sh\", \"-c\", \"java $JAVA_OPTS -jar app.jar\"]\n\n# =================================\n# Build Information\n# =================================\n# 빌드 시점에 ARG로 전달받을 수 있는 정보들\nARG BUILD_DATE\nARG VCS_REF\nARG VERSION\n\n# 이미지 메타데이터에 빌드 정보 추가\nLABEL org.opencontainers.image.created=$BUILD_DATE \\\n      org.opencontainers.image.revision=$VCS_REF \\\n      org.opencontainers.image.version=$VERSION \\\n      org.opencontainers.image.source=\"https://github.com/commonground/be\" \\\n      org.opencontainers.image.url=\"https://github.com/commonground/be\" \\\n      org.opencontainers.image.documentation=\"https://github.com/commonground/be/blob/main/README.md\" \\\n      org.opencontainers.image.title=\"CommonGround Backend\" \\\n      org.opencontainers.image.description=\"CommonGround 플랫폼의 백엔드 API 서버\""